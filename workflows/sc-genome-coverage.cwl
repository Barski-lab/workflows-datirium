cwlVersion: v1.0
class: Workflow


requirements:
  - class: SubworkflowFeatureRequirement
  - class: StepInputExpressionRequirement
  - class: MultipleInputFeatureRequirement
  - class: InlineJavascriptRequirement
    expressionLib:
    - var get_source_column = function(resolution) {
            return "wsnn_res."+resolution;
      }

'sd:upstream':
  seurat_cluster_sample:
  - "seurat-wnn-cluster.cwl"
  genome_indices:
  - "genome-indices.cwl"
  - "https://github.com/datirium/workflows/workflows/genome-indices.cwl"

inputs:

  alias:
    type: string
    label: "Experiment short name/alias"
    sd:preview:
      position: 1

  seurat_clst_data_rds:
    type: File
    label: "Seurat WNN Analysis Experiment"
    doc: |
      Path to the RDS file to load Seurat object from. RDS file can be
      produced by run_seurat.R, assign_cell_types.R, or run_seurat_wnn.R
      scripts.
    'sd:upstreamSource': "seurat_cluster_sample/seurat_clst_data_rds"
    'sd:localLabel': true

  atac_fragments_file:
    type: File
    label: "Seurat WNN Analysis Experiment"
    doc: |
      Path to GZIP compressed TSV file with ATAC fragments (from Cell Ranger ARC)
    'sd:upstreamSource': "seurat_cluster_sample/atac_fragments_file"
    'sd:localLabel': true

  chrom_length_file:
    type: File
    label: "Chromosome length file"
    doc: |
      Chromosome length file
    'sd:upstreamSource': "genome_indices/chrom_length"

  resolution:
    type: string
    label: "Clustering resolution to split scATAC fragments by"
    doc: |
      Clustering resolution defines 'source_column' input
      for 'extract_metadata' step

  memory:
    type: int?
    default: 32
    label: "Maximum memory in GB allowed to be shared between the workers when using multiple CPUs"
    doc: |
      Maximum memory in GB allowed to be shared between the workers
      when using multiple --cpus.
      Default: 32
    'sd:layout':
      advanced: true

  threads:
    type: int?
    default: 2
    label: "Number of cores/cpus to use"
    doc: |
      Number of cores/cpus to use
    'sd:layout':
      advanced: true


outputs:

  genome_coverage_file:
    type: File[]
    outputSource: calculate_coverage/genome_coverage_file
    label: "Genome coverage per cluster"
    doc: "Generated per cluster genome coverage file in bigWig format"
    'sd:visualPlugins':
    - igvbrowser:
        tab: 'IGV Genome Browser'
        id: 'igvbrowser'
        type: 'wig'
        name: "Genome coverage"
        height: 120

  extract_metadata_stdout_log:
    type: File
    outputSource: extract_metadata/stdout_log
    label: stdout log generated by 'extract_metadata' step
    doc: |
      stdout log generated by 'extract_metadata' step

  extract_metadata_stderr_log:
    type: File
    outputSource: extract_metadata/stderr_log
    label: stderr log generated by 'extract_metadata' step
    doc: |
      stderr log generated by 'extract_metadata' step

  split_atac_fragments_stdout_log:
    type: File
    outputSource: split_atac_fragments/stdout_log
    label: stdout log generated by 'split_atac_fragments' step
    doc: |
      stdout log generated by 'split_atac_fragments' step

  split_atac_fragments_stderr_log:
    type: File
    outputSource: split_atac_fragments/stderr_log
    label: stderr log generated by 'split_atac_fragments' step
    doc: |
      stderr log generated by 'split_atac_fragments' step


steps:

  extract_metadata:
    run: ../tools/sc-extract-metadata.cwl
    in:
      seurat_data_rds: seurat_clst_data_rds
      source_column:
        source: resolution
        valueFrom: $(get_source_column(self))
      verbose:
        default: true
      memory: memory
      threads: threads
    out:
    - clusters_metadata
    - stdout_log
    - stderr_log

  split_atac_fragments:
    run: ../tools/sc-split-atac.cwl
    in:
      atac_fragments_file: atac_fragments_file
      clusters_metadata:
        source: extract_metadata/clusters_metadata
        valueFrom: $(self[0])
      log_level:
        default: "debug"
      threads:
        default: 1
    out:
    - atac_fragments_per_cluster_file
    - stdout_log
    - stderr_log

  get_mapped_reads_number:
    run:
      cwlVersion: v1.0
      class: Workflow
      requirements:
       - class: SubworkflowFeatureRequirement
       - class: ScatterFeatureRequirement
      inputs:
        atac_fragments_file:
          type: File[]
      outputs:
        mapped_reads_number:
          type: int[]
          outputSource: count_lines/mapped_reads_number
      steps:
        count_lines:
          run:
            cwlVersion: v1.0
            class: CommandLineTool
            hints:
            - class: DockerRequirement
              dockerPull: biowardrobe2/scidap:v0.0.3
            inputs:
              script:
                type: string?
                default: |
                  echo "$0"
                  cat "$0" | wc -l > lines.txt
                  ls -la
                  cat lines.txt
                inputBinding:
                  position: 1
              atac_fragments_file:
                type: File
                inputBinding:
                  position: 2
            outputs:
              mapped_reads_number:
                type: int
                outputBinding:
                  loadContents: true
                  glob: "lines.txt"
                  outputEval: $(parseInt(self[0].contents.split('\n')[0]))
            baseCommand: [bash, '-c']
          in:
            atac_fragments_file: atac_fragments_file
          out:
          - mapped_reads_number
          scatter: atac_fragments_file
    in:
      atac_fragments_file: split_atac_fragments/atac_fragments_per_cluster_file
    out:
    - mapped_reads_number

  calculate_coverage:
    run:
      cwlVersion: v1.0
      class: Workflow
      requirements:
       - class: SubworkflowFeatureRequirement
       - class: ScatterFeatureRequirement
      inputs:
        atac_fragments_file:
          type: File[]
        chrom_length_file:
          type: File
        mapped_reads_number:
          type: int[]
      outputs:
        genome_coverage_file:
          type: File[]
          outputSource: coverage/bigwig_file
      steps:
        coverage:
          run: ../tools/bam-bedgraph-bigwig.cwl
          in:
            alignment_file: atac_fragments_file
            chrom_length_file: chrom_length_file
            mapped_reads_number: mapped_reads_number
            split:
              default: False
          scatter: [alignment_file, mapped_reads_number]
          scatterMethod: dotproduct
          out:
          - bigwig_file
    in:
      atac_fragments_file: split_atac_fragments/atac_fragments_per_cluster_file
      chrom_length_file: chrom_length_file
      mapped_reads_number: get_mapped_reads_number/mapped_reads_number
    out:
    - genome_coverage_file


$namespaces:
  s: http://schema.org/

$schemas:
- https://github.com/schemaorg/schemaorg/raw/main/data/releases/11.01/schemaorg-current-http.rdf

label: "Single-cell Genome Coverage"
s:name: "Single-cell Genome Coverage"
s:alternateName: "Calculates genome coverage for split by cluster scATAC fragments"

s:downloadUrl: https://raw.githubusercontent.com/Barski-lab/workflows-datirium/master/workflows/sc-genome-coverage.cwl
s:codeRepository: https://github.com/Barski-lab/workflows-datirium
s:license: http://www.apache.org/licenses/LICENSE-2.0

s:isPartOf:
  class: s:CreativeWork
  s:name: Common Workflow Language
  s:url: http://commonwl.org/

s:creator:
- class: s:Organization
  s:legalName: "Cincinnati Children's Hospital Medical Center"
  s:location:
  - class: s:PostalAddress
    s:addressCountry: "USA"
    s:addressLocality: "Cincinnati"
    s:addressRegion: "OH"
    s:postalCode: "45229"
    s:streetAddress: "3333 Burnet Ave"
    s:telephone: "+1(513)636-4200"
  s:logo: "https://www.cincinnatichildrens.org/-/media/cincinnati%20childrens/global%20shared/childrens-logo-new.png"
  s:department:
  - class: s:Organization
    s:legalName: "Allergy and Immunology"
    s:department:
    - class: s:Organization
      s:legalName: "Barski Research Lab"
      s:member:
      - class: s:Person
        s:name: Michael Kotliar
        s:email: mailto:misha.kotliar@gmail.com
        s:sameAs:
        - id: https://orcid.org/0000-0002-6486-3898


doc: |
  Single-cell Genome Coverage
  ===========================

  Calculates genome coverage for split by cluster scATAC fragments.